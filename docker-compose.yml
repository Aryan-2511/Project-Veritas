
services:
  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    env_file: .env

  rsshub:
    image: diygod/rsshub:latest
    container_name: veritas_rsshub
    env_file: .env
    environment:
      - NODE_ENV=production
    ports:
      - "1200:1200"
    restart: unless-stopped

  concierge:
    build:
      context: .
      dockerfile: concierge/Dockerfile
    container_name: veritas_concierge
    env_file: .env
    volumes:
      - ./data:/app/data
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - rsshub
    restart: unless-stopped

  scout:
    build:
      context: .
      dockerfile: scout/Dockerfile
    container_name: veritas_scout
    env_file: .env
    volumes:
      - ./data:/app/data
    ports:
      - "8001:8080"
    depends_on:
      - redis
      - rsshub
      - concierge
    restart: unless-stopped

  analyst:
    build:
      context: .
      dockerfile: analyst/Dockerfile
    container_name: veritas_analyst
    env_file: .env
    volumes:
      - ./data:/app/data
    ports:
      - "8002:8080"
    depends_on:
      - redis
    restart: unless-stopped

  moderator:
    build:
      context: .
      dockerfile: moderator/Dockerfile
    container_name: veritas_moderator
    env_file: .env
    volumes:
      - ./data:/app/data
    ports:
      - "8004:8080"
    depends_on:
      - redis
      - concierge
    restart: unless-stopped

  dispatcher:
    build:
      context: .
      dockerfile: dispatcher/Dockerfile
    container_name: veritas_dispatcher
    env_file: .env
    volumes:
      - ./data:/app/data
    ports:
      - "8003:8080"
    depends_on:
      - redis
      - analyst
    restart: unless-stopped

volumes:
  redis-data:
